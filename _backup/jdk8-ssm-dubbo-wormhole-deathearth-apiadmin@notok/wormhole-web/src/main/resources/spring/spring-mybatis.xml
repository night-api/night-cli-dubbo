<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd "
	default-lazy-init="true">

	<bean name="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- Connection Pooling Info -->
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="1" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="defaultAutoCommit" value="true" />
		
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="20000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />


		<!-- ====================================================================================== -->
        <!-- validationQuery: 用来检测连接是否有效的sql。value为一个sql语句；如果为null，那么textOnBorrow -->
        <!--                  testOnReturn、testWhileIdle都不会起作用                                 -->
        <!--                                                                                        -->
        <!--    testOnBorrow: 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能        -->
        <!--    testOnReturn: 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能        -->
        <!--   testWhileIdle: 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大 -->
        <!--                  于timeBetweenEvictionRunsMillis（单位毫秒），执行validationQuery检测连接是否有效 -->
        <!--                                                                                        -->
        <!-- ====================================================================================== -->
        <property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
        

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 oracle 数据库打开，其余不要配置 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="10" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<!-- <property name="filters" value="mergeStat" /> -->
		<property name="proxyFilters">
			<list>
				<ref bean="statFilter" />
			</list>
		</property>
	</bean>
	
	<bean id="statFilter"
		class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="1500" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="false" />
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations">
			<array>
				<value>classpath:mybatis/mgr/*.xml</value>
				<value>classpath:mybatis/auth/*.xml</value>
			</array>
		</property>
	</bean>
	<!-- 自动扫描DAO层 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kaistart.gateway.mgr.mapper,com.kaistart.auth.mapper" />
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>
	<!-- 开启事物支持 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启注解支持 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
		<property name="isolationLevelName" value="ISOLATION_DEFAULT" />
	</bean>
	
	<!-- 操作数据库对象 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
</beans>
