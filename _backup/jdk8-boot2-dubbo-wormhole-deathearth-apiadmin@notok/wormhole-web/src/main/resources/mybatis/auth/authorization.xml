<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaistart.auth.mapper.AuthorizationMapper">

    <resultMap id="result" type="com.kaistart.auth.domain.Authorization">
        <id column="id" property="id"/>
        <result column="USER_ID" property="userId"/>
        <result column="ROLE_ID" property="roleId"/>
        <result column="CDT" property="cdt"/>
        <result column="UDT" property="udt"/>
    </resultMap>

    <sql id="where">
        <where>
            <if test="id != null">id = #{id}</if>
            <if test="userId != null">and user_id = #{userId}</if>
            <if test="roleId != null">and role_id = #{roleId}</if>
        </where>
    </sql>

    <select id="selectById" parameterType="Integer" resultMap="result">
        SELECT * FROM auth_authorization WHERE id = #{id}
    </select>

    <select id="selectByUserId" parameterType="Integer" resultMap="result">
        SELECT * FROM auth_authorization where user_id = #{userId}
    </select>

    <select id="selectCount" parameterType="Map" resultType="Integer">
        SELECT count(*) FROM auth_authorization
        <include refid="where"/>
    </select>

    <select id="selectList" parameterType="Map" resultMap="result">
        SELECT * FROM auth_authorization

        <include refid="where"/>

        ORDER BY id DESC

        <if test="size != null or skip != null">
            LIMIT #{skip}, #{size}
        </if>
    </select>

    <update id="update" parameterType="com.kaistart.auth.domain.Authorization">
        UPDATE auth_authorization

        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            udt = now()
        </set>

        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="Integer">
        DELETE FROM auth_authorization WHERE id = #{id}
    </delete>

    <delete id="deleteByUserId" parameterType="Integer">
        DELETE FROM auth_authorization where user_id = #{userId}
    </delete>

    <insert id="insert" parameterType="com.kaistart.auth.domain.Authorization">
        INSERT INTO auth_authorization (user_id, role_id, cdt, udt) VALUES (#{userId}, #{roleId}, now(), now())
    </insert>

    <insert id="insertList" parameterType="ArrayList">
        INSERT INTO auth_authorization (user_id, role_id, cdt, udt) VALUES
        <foreach collection="list" item="authz" index="index" separator=",">
            (#{authz.userId}, #{authz.roleId}, now(), now())
        </foreach>
    </insert>

</mapper>