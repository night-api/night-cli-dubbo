<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaistart.gateway.mgr.mapper.GatewayAppAuthMapper">
  <resultMap id="BaseResultMap" type="com.kaistart.gateway.domain.GatewayAppAuthDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="APP_ID" jdbcType="BIGINT" property="appId" />
    <result column="AUTH_ID" jdbcType="BIGINT" property="authId" />
    <result column="AUTH_ID_TYPE" jdbcType="INTEGER" property="authIdType" />
    <result column="AUTH_NAME" jdbcType="VARCHAR" property="authName" />
    <result column="CDT" jdbcType="TIMESTAMP" property="cdt" />
    <result column="UDT" jdbcType="TIMESTAMP" property="udt" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, APP_ID, AUTH_ID, AUTH_ID_TYPE, AUTH_NAME, CDT, UDT, VERSION
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from gateway_app_auth
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gateway_app_auth
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.kaistart.gateway.domain.GatewayAppAuthDO"
  	useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gateway_app_auth ( APP_ID, AUTH_ID, 
      AUTH_ID_TYPE, AUTH_NAME, CDT, 
      UDT, VERSION)
    values ( #{appId,jdbcType=BIGINT}, #{authId,jdbcType=BIGINT}, 
      #{authIdType,jdbcType=INTEGER}, #{authName,jdbcType=VARCHAR}, now(), 
      now(), #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kaistart.gateway.domain.GatewayAppAuthDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gateway_app_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="appId != null">
        APP_ID,
      </if>
      <if test="authId != null">
        AUTH_ID,
      </if>
      <if test="authIdType != null">
        AUTH_ID_TYPE,
      </if>
      <if test="authName != null">
        AUTH_NAME,
      </if>
      <if test="cdt != null">
        CDT,
      </if>
      <if test="udt != null">
        UDT,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="appId != null">
        #{appId,jdbcType=BIGINT},
      </if>
      <if test="authId != null">
        #{authId,jdbcType=BIGINT},
      </if>
      <if test="authIdType != null">
        #{authIdType,jdbcType=INTEGER},
      </if>
      <if test="authName != null">
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="cdt != null">
        now(),
      </if>
      <if test="udt != null">
        now(),
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaistart.gateway.domain.GatewayAppAuthDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gateway_app_auth
    <set>
      <if test="appId != null">
        APP_ID = #{appId,jdbcType=BIGINT},
      </if>
      <if test="authId != null">
        AUTH_ID = #{authId,jdbcType=BIGINT},
      </if>
      <if test="authIdType != null">
        AUTH_ID_TYPE = #{authIdType,jdbcType=INTEGER},
      </if>
      <if test="authName != null">
        AUTH_NAME = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
       UDT = now(),
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaistart.gateway.domain.GatewayAppAuthDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gateway_app_auth
    set APP_ID = #{appId,jdbcType=BIGINT},
      AUTH_ID = #{authId,jdbcType=BIGINT},
      AUTH_ID_TYPE = #{authIdType,jdbcType=INTEGER},
      AUTH_NAME = #{authName,jdbcType=VARCHAR},
      CDT = #{cdt,jdbcType=TIMESTAMP},
      UDT = now()},
      VERSION = #{version,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  
  
  
  <sql id="where">
	<where>
	<if test="id != null and id != ''">and `ID` = #{id}</if>
        <if test="appId != null and appId != ''">and APP_ID = #{appId}</if>
        <if test="authId != null and authId != ''">and AUTH_ID = #{authId}</if>
        <if test="authIdType != null and authIdType != ''">and AUTH_ID_TYPE = #{authIdType}</if>
        <if test="authName != null and authName != ''">and AUTH_NAME = #{authName}</if>
        <if test="cdt != null and cdt != ''">and `CDT` = #{cdt}</if>
        <if test="udt != null and udt != ''">and `UDT` = #{udt}</if>
        <if test="version != null and version != ''">and `VERSION` = #{version}</if>
        
	</where>
  </sql>
  
   <!-- 查询所有 -->
  <select id="selectList" resultMap="BaseResultMap" parameterType="Map">
    SELECT
    <include refid="Base_Column_List" />
    FROM gateway_app_auth
    <include refid="where"/>
    order by id desc <if test="size != null or skip != null"> LIMIT #{skip}, #{size} </if>
  </select>
  
  <!--查询总数-->
  <select id="selectCount" parameterType="Map" resultType="Integer">
     SELECT count(*) FROM gateway_app_auth  
     <include refid="where"/>
  </select>
  
  
  <!-- 查询所有 -->
  <select id="selectAuthList" resultMap="BaseResultMap" parameterType="Map">
    SELECT
    `ID`,APP_ID,AUTH_ID,AUTH_ID_TYPE,`VERSION`
    FROM gateway_app_auth
    <include refid="where"/>
    order by id desc
    <if test="size != null or skip != null"> LIMIT #{skip}, #{size} </if>
  </select>
  
  
  
  
  <!-- 新增自定义方法 -->
  <resultMap id="BaseResultMapAuth" type="com.kaistart.gateway.domain.GatewayAppAuthDO">
    <result column="ID" property="id" />
    <result column="AUTHPK" property="authPK" />
    <result column="APP_ID" property="appId" />
    <result column="AUTH_ID" property="authId" />
    <result column="AUTH_ID_TYPE" property="authIdType" />
    <result column="AUTH_NAME" property="authName" />
    <result column="`CDT`" property="cdt" />
    <result column="`UDT`" property="udt" />
    <result column="`VERSION`" property="version" />
    <result column="`NAME`" property="name" />
    <result column="`DESCRIPTION`" property="description" />
    <result column="`CREATEBY`" property="createBy" />
    <result column="`STSTUS`" property="status" />
  </resultMap>
  
  <sql id="whereAuth">
	<where>
		<if test="authPK != 0">and `ID` = #{id}</if>
        <if test="appId != null and appId != ''">and APP_ID = #{appId}</if>
        <if test="authId != null and authId != ''">and AUTH_ID = #{authId}</if>
        <if test="authIdType != null and authIdType != ''">and AUTH_ID_TYPE = #{authIdType}</if>
        <if test="authName != null and authName != ''">and AUTH_NAME = #{authName}</if>
        <if test="cdt != null and cdt != ''">and `CDT` = #{cdt}</if>
        <if test="udt != null and udt != ''">and `UDT` = #{udt}</if>
        <if test="version != null and version != ''">and `VERSION` = #{version}</if>
        
	</where>
  </sql>
  <!-- 查询所有 -->
  <select id="selectListAuthGroup" resultType="java.util.Map" parameterType="Map">
    select a.ID,b.id as authPK,name,description,DATE_FORMAT(IFNULL(b.cdt,a.cdt),'%Y-%m-%d %H:%i:%S') as cdt,app_id,auth_id,auth_id_type,auth_name,
		case ifnull(b.id,0) when 0 then 0 else 1 end as status  from
		(select * from gateway_api_group where `status` = 1) a left join (
		select  `ID`,APP_ID,AUTH_ID,AUTH_ID_TYPE,AUTH_NAME,`CDT`,`UDT`,`VERSION` 
		from gateway_app_auth 
		<include refid="whereAuth"/> 
	) b on a.ID = b.AUTH_ID 
	order by authPK desc 
  </select>
  
  <!-- 分页查询 -->
  <select id="selectPageAuthGroup" resultType="java.util.Map" parameterType="Map">
    select a.id,b.id as authPK,name,description,DATE_FORMAT(IFNULL(b.cdt,a.cdt),'%Y-%m-%d %H:%i:%S') as cdt,app_id,auth_id,auth_id_type,auth_name,
        case ifnull(b.id,0) when 0 then 0 else 1 end as status  from
		(select * from gateway_api_group where `status` = 1) a left join (
		select  `ID`,APP_ID,AUTH_ID,AUTH_ID_TYPE,AUTH_NAME,`CDT`,`UDT`,`VERSION` 
		from gateway_app_auth 
		<include refid="whereAuth"/> 
	) b on a.ID = b.AUTH_ID 
	order by authPK desc 
    <if test="size != null or skip != null"> LIMIT #{skip}, #{size} </if>
  </select>
  
  <!--查询总数-->
  <select id="selectCountGroup" parameterType="Map" resultType="Integer">
     select count(*) from
		(select * from gateway_api_group where `status` = 1) a left join (
		select  `ID`,APP_ID,AUTH_ID,AUTH_ID_TYPE,AUTH_NAME,`CDT`,`UDT`,`VERSION` 
		from gateway_app_auth 
		<include refid="whereAuth"/> 
	) b on a.ID = b.AUTH_ID  
   </select>
	
	
	<!-- 查询所有 -->
  <select id="selectListAuthApi" resultType="java.util.Map" parameterType="Map">
    select a.id,b.id as authPK,name,description,DATE_FORMAT(IFNULL(b.cdt,a.cdt),'%Y-%m-%d %H:%i:%S') as cdt,app_id,auth_id,auth_id_type,auth_name,
    	case ifnull(b.id,0) when 0 then 0 else 1 end as status  from
		(select * from gateway_api where `status` > 0)  a left join (
		select  `ID`,APP_ID,AUTH_ID,AUTH_ID_TYPE,AUTH_NAME,`CDT`,`UDT`,`VERSION` 
		from gateway_app_auth 
		<include refid="whereAuth"/> 
	) b on a.ID = b.AUTH_ID 
	order by authPK desc 
  </select>
  
  <!-- 分页查询 -->
  <select id="selectPageAuthApi" resultType="java.util.Map" parameterType="Map">
    select a.id,b.id as authPK,name,description,DATE_FORMAT(IFNULL(b.cdt,a.cdt),'%Y-%m-%d %H:%i:%S') as cdt,app_id,auth_id,auth_id_type,auth_name,
    	case ifnull(b.id,0) when 0 then 0 else 1 end as status  from
		(select * from gateway_api where `status` > 0) a left join (
		select  `ID`,APP_ID,AUTH_ID,AUTH_ID_TYPE,AUTH_NAME,`CDT`,`UDT`,`VERSION` 
		from gateway_app_auth 
		<include refid="whereAuth"/> 
	) b on a.ID = b.AUTH_ID  
	order by authPK desc 
    <if test="size != null or skip != null"> LIMIT #{skip}, #{size} </if>
  </select>
  
  <!--查询总数-->
  <select id="selectCountApi" parameterType="Map" resultType="Integer">
     select count(*) from
		(select * from gateway_api where `status` > 0) a left join (
		select  `ID`,APP_ID,AUTH_ID,AUTH_ID_TYPE,AUTH_NAME,`CDT`,`UDT`,`VERSION` 
		from gateway_app_auth <include refid="whereAuth"/> 
	) b on a.ID = b.AUTH_ID 
	
  </select>
</mapper>